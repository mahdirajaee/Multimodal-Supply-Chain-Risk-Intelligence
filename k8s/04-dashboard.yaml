apiVersion: apps/v1
kind: Deployment
metadata:
  name: supply-chain-dashboard
  namespace: supply-chain-risk
  labels:
    app: supply-chain-dashboard
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: supply-chain-dashboard
  template:
    metadata:
      labels:
        app: supply-chain-dashboard
        component: frontend
    spec:
      containers:
      - name: dashboard
        image: supply-chain-risk:latest
        ports:
        - containerPort: 8501
          name: http
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: DASHBOARD_PORT
          valueFrom:
            configMapKeyRef:
              name: supply-chain-config
              key: DASHBOARD_PORT
        - name: API_BASE_URL
          value: "http://supply-chain-api:8000"
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: supply-chain-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: supply-chain-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: supply-chain-config
              key: POSTGRES_DB
        - name: REDIS_URL
          value: "redis://redis:6379/$(REDIS_DB)"
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: supply-chain-config
              key: REDIS_DB
        command: ["streamlit", "run", "scripts/enhanced_dashboard.py", "--server.port", "8501", "--server.address", "0.0.0.0"]
        volumeMounts:
        - name: app-data
          mountPath: /app/data
          readOnly: true
        - name: app-logs
          mountPath: /app/logs
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /_stcore/health
            port: 8501
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: app-logs
        emptyDir: {}
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: supply-chain-dashboard
  namespace: supply-chain-risk
  labels:
    app: supply-chain-dashboard
spec:
  type: ClusterIP
  ports:
  - port: 8501
    targetPort: 8501
    name: http
  selector:
    app: supply-chain-dashboard
